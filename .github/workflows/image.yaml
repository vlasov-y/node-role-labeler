#  o┌┌┐┬─┐┌─┐┬─┐
#  │││││─┤│ ┬├─
#  ┘┘ ┘┘ ┘┘─┘┴─┘

name: Image

on:
  push:
    branches:
      - "**"
    paths:
      - src/**/*
    tags:
      - v*
  pull_request:
    branches:
      - main

env:
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}
  META_TAGS: |
    type=raw,value=latest,enable={{is_default_branch}}
    type=semver,pattern={{version}}
    type=semver,pattern={{major}}.{{minor}}
    type=semver,pattern={{major}}
    type=ref,event=branch
    type=ref,event=pr
    type=sha

permissions:
  packages: write
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.sha }}-${{ matrix.platform }}-build
      cancel-in-progress: false
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Prepare
        run: echo "PLATFORM_PAIR=${PLATFORM//\//-}" >> $GITHUB_ENV
        env:
          PLATFORM: ${{ matrix.platform }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ env.META_TAGS }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: src
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY_IMAGE }}:latest
          cache-to: type=inline
          outputs: |-
            type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          DIGEST="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${DIGEST#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge manifest
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.sha }}-merge
      cancel-in-progress: false
    needs: [build]
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ env.META_TAGS }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' * | \
          xargs docker buildx imagetools create $(jq -Mcr '.tags | map("-t " + .) | join(" ")' <<< "${DOCKER_METADATA_OUTPUT_JSON}")

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
